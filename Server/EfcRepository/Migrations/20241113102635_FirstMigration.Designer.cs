// <auto-generated />
using EfcRepository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EfcRepository.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20241113102635_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("EfcRepository.EfcComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EfcPostId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EfcUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PostId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EfcPostId");

                    b.HasIndex("EfcUserId");

                    b.ToTable("EfcComment");
                });

            modelBuilder.Entity("EfcRepository.EfcPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EfcUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EfcUserId");

                    b.ToTable("EfcPost");
                });

            modelBuilder.Entity("EfcRepository.EfcUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EfcUser");
                });

            modelBuilder.Entity("EfcRepository.EfcComment", b =>
                {
                    b.HasOne("EfcRepository.EfcPost", "EfcPost")
                        .WithMany()
                        .HasForeignKey("EfcPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EfcRepository.EfcUser", "EfcUser")
                        .WithMany()
                        .HasForeignKey("EfcUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EfcPost");

                    b.Navigation("EfcUser");
                });

            modelBuilder.Entity("EfcRepository.EfcPost", b =>
                {
                    b.HasOne("EfcRepository.EfcUser", "EfcUser")
                        .WithMany()
                        .HasForeignKey("EfcUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EfcUser");
                });
#pragma warning restore 612, 618
        }
    }
}
